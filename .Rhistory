summary(nomiss)
class(temp$Group)
table(temp$Group)
help(write.csv)
library(tidyr)
library(magrittr)
library(dplyr)
library(lubridate)
library(zoo)
library(M3)
library(data.table)
#library(Table1)
#library(devtools)
library(Hmisc)
library(knitr)
#library(kableExtra)
library(psycho)
#library(tidyverse)
source("C:\\Users\\pylell\\Documents\\GitHub\\General-code\\temp_table1.r")
####################################################################################################
#Data Manipulation #
####################################################################################################
setwd("H:\\Endocrinology\\Bjornstad\\NEPTUNE\\Data")
nameFile <- ".\\Copy of NEPTUNE SGLT Ancillary Data  Export 11MAY2018_working_locked.csv"
# read the data
#alldata <- read.csv(nameFile)
alldata <- read.csv(nameFile,na.strings = c("N",'',' ','               '))
table(alldata$SteroidsPre)
# are the primary outcomes constant within a patient?
#table(alldata$SGLTID,alldata$PAT_RemissionComp_Ever)
#table(alldata$SGLTID,alldata$PAT_RemissionPartComp_Ever)
#table(alldata$SGLTID,alldata$PAT_Composite)
# I thought this was going to be a survival analysis but it looks like outcomes are constant
# Groups of interest are PAT_Ped (<18 vs >=18), PAT_Cohort (disease group)
#table(alldata$PAT_Ped)
#table(alldata$PAT_Cohort)
# Exclude those with "other disease" except those with IgA nephropathy (PAT_IgA)
levels(alldata$PAT_Cohort)=c("1 - MN","2 - MCD","3 - Other", "4 - FSGS","5 - IgA")
alldata$PAT_Cohort[alldata$PAT_Cohort=="3 - Other" & alldata$PAT_IgA=="1: Yes"] <- "5 - IgA"
final <- alldata[alldata$PAT_Cohort != "3 - Other",]
final$PAT_Cohort <- factor(final$PAT_Cohort)
# do I need to add in the ERCB dataset for all analyses?
# no, this is a separate analysis
# are there patients in this dataset that should be excluded?
# exclude those with diabetic nephropathy?
final <- final[is.na(final$ExclusionCondSpecify),]
# Exclude anyone with diabetes at baseline or follow-up
final <- final[final$DM_FU != "1: Yes" & final$PAT_DMatBL != "1: Yes",]
# use only baseline visits.  mRNA data come from biopsy visit, but those data are included in the
# baseline record also
#final <- final[final$visitnum=='2: V02- Baseline',]
final <- filter(final,final$visitnum=='2: V02- Baseline')
# looking at race
# RaceBlack is yes for some multiracial, also all Black/African American
#table(final$PAT_Race)
#table(final$PAT_RaceBlack)
#table(final$PAT_Hispanic)
#table(final$PAT_Race,final$PAT_RaceBlack)
#table(final$PAT_Race,final$PAT_Hispanic,final$PAT_RaceBlack)
# recode race/ethnicity
# Whites
final$Race_eth[final$PAT_Race=='5: White/Caucasian'
& final$PAT_Hispanic=="2: Not Hispanic or Latino"] <- 'Non-Hispanic White'
# Asians
final$Race_eth[final$PAT_Race=='2: Asian/Asian American'
& final$PAT_Hispanic=="2: Not Hispanic or Latino"] <- 'Asian'
# Blacks
final$Race_eth[final$PAT_Race=='3: Black/African American'
& final$PAT_Hispanic=="2: Not Hispanic or Latino"] <- 'Non-Hispanic Black'
# Others
final$Race_eth[is.na(final$Race_eth)] <- "Other"
# need to check that race is correct
# table(final$Race_eth)
# View(final[c("Race_eth","PAT_Race","PAT_RaceBlack","PAT_Hispanic")])
# convert follow-up variables to yes/no
final$Stroke[!is.na(final$PAT_Stroke_FUTimeToFirst)] <- '1: Yes'
final$Stroke[is.na(final$PAT_Stroke_FUTimeToFirst)] <- '0: No'
final$HF[!is.na(final$PAT_HF_FUTimeToFirst)] <- '1: Yes'
final$HF[is.na(final$PAT_HF_FUTimeToFirst)] <- '0: No'
levels(final$SteroidsPre) <- c("1: Yes ","0: No")
final$SteroidsPre[is.na(final$SteroidsPre)] <- '0: No'
levels(final$ACEARBPre) <- c("1: Yes ","0: No")
final$ACEARBPre[is.na(final$ACEARBPre)] <- '0: No'
levels(final$CNIpre) <- c("1: Yes ","0: No")
final$CNIpre[is.na(final$CNIpre)] <- '0: No'
levels(final$CTXPre) <- c("1: Yes ","0: No")
final$CTXPre[is.na(final$CTXPre)] <- '0: No'
levels(final$MMFpre) <- c("1: Yes ","0: No")
final$MMFpre[is.na(final$MMFpre)] <- '0: No'
levels(final$ImmunosupressionV) <- c("1: Yes ","0: No")
final$ImmunosupressionV[is.na(final$ImmunosupressionV)] <- '0: No'
levels(final$SteroidV) <- c("1: Yes ","0: No")
final$SteroidV[is.na(final$SteroidV)] <- '0: No'
levels(final$CTXV) <- c("1: Yes ","0: No")
final$CTXV[is.na(final$CTXV)] <- '0: No'
levels(final$CNIV) <- c("1: Yes ","0: No")
final$CNIV[is.na(final$CNIV)] <- '0: No'
levels(final$RituxV) <- c("1: Yes ","0: No")
final$RituxV[is.na(final$RituxV)] <- '0: No'
levels(final$MMFV) <- c("1: Yes ","0: No")
final$MMFV[is.na(final$MMFV)] <- '0: No'
levels(final$OtherIStV) <- c("1: Yes ","0: No")
final$OtherIStV[is.na(final$OtherIStV)] <- '0: No'
levels(final$RAASblockV) <- c("1: Yes ","0: No")
final$RAASblockV[is.na(final$RAASblockV)] <- '0: No'
levels(final$DiureticV) <- c("1: Yes ","0: No")
final$DiureticV[is.na(final$DiureticV)] <- '0: No'
# convert to numeric
final$Weight <- as.numeric(as.character(final$Weight))
final$Height <- as.numeric(as.character(final$Height))
final$BP_SitSys <- as.numeric(as.character(final$BP_SitSys))
final$BP_SitDias <- as.numeric(as.character(final$BP_SitDias))
final$BP_StandSys <- as.numeric(as.character(final$BP_StandSys))
final$BP_StandDias <- as.numeric(as.character(final$BP_StandDias))
final$Hematocrit <- as.numeric(as.character(final$Hematocrit))
final$eGFR <- as.numeric(as.character(final$eGFR))
final$UPCR <- as.numeric(as.character(final$UPCR))
final$UACR <- as.numeric(as.character(final$UACR))
final$A1c <- as.numeric(as.character(final$A1c))
final$Sodium <- as.numeric(as.character(final$Sodium))
final$Potassium <- as.numeric(as.character(final$Potassium))
final$UreaNitrogen <- as.numeric(as.character(final$UreaNitrogen))
final$Glucose <- as.numeric(as.character(final$Glucose))
final$Albumin <- as.numeric(as.character(final$Albumin))
final$Calcium <- as.numeric(as.character(final$Calcium))
final$Phosphorus <- as.numeric(as.character(final$Phosphorus))
final$Magnesium <- as.numeric(as.character(final$Magnesium))
####################################################################################################
# Descriptive Tables #
# Table 1 - at time of biopsy #
####################################################################################################
# set factors and levels
# set labels
label(final$PAT_Ped)='Pediatric'
label(final$PAT_Cohort)='Disease group'
label(final$PAT_Agev2)='Age'
label(final$PAT_Sex)='Sex'
label(final$BMI)='BMI'
label(final$Weight)='Wt'
label(final$Height)='Height'
label(final$BP_SitSys)='Sitting SBP'
label(final$BP_SitDias)='Sitting DBP'
label(final$BP_StandSys)='Standing SBP'
label(final$BP_StandDias)='Standing DBP'
label(final$Hematocrit)='Hematocrit'
label(final$eGFR)='eGFR'
label(final$UPCR)='UPCR'
label(final$UACR)="UACR"
label(final$PAT_CADatBL)='CAD baseline'
label(final$CAD_FU)='CAD follow-up'
label(final$PAT_PVDatBL)='PVD baseline'
label(final$PVD_FU)='PVD follow-up'
label(final$PAT_StrokeatBL)='Stroke baseline'
label(final$Stroke)='Stroke follow-up'
label(final$PAT_HTNatBL)='Hypertension baseline'
label(final$HTNStatus)='Hypertension status'
label(final$PAT_DMatBL)='Diabetes baseline'
label(final$DM_FU)='Diabetes follow-up'
label(final$PAT_HFatBL)='Heart failure baseline'
label(final$HF)='Heart failure follow-up'
label(final$HA_FU)='Heart arrhythmia follow-up'
label(final$TE_FU)='Thromboembolic event follow-up'
label(final$PAT_CanceratBL)='Cancer baseline'
label(final$Cancer_FU)='Cancer follow-up'
label(final$A1c)='HbA1c (%)'
label(final$Sodium)='Sodium (mmol/L)'
label(final$Potassium)='Potassium (mmol/L)'
label(final$CO2)='CO2 (mmol/L)'
label(final$UreaNitrogen)='Urea nitrogen (mg/dl)'
label(final$Glucose)="Glucose (mg/dL)"
label(final$Albumin)="Albumin (g/dL)"
label(final$Calcium)='Calcium (mg/dL)'
label(final$Phosphorus)="Phosphorus (mg/dL)"
label(final$Magnesium)="Magnesium (mg/dL)"
label(final$SGLT1_TI)="Log2 SGLT1 TI"
label(final$SGLT1_GLOM)="Log2 SGLT1 GLOM"
label(final$SGLT2_TI)="Log2 SGLT2 TI"
label(final$SGLT2_GLOM)="Log2 SGLT2 GLOM"
label(final$interstitialfibrosis)="Interstitial fibrosis"
label(final$SteroidsPre)="Steroid exposure prior to enrollment"
label(final$ACEARBPre)="ACE/ARB exposure prior to enrollment"
label(final$CNIpre)="CNI exposure prior to enrollment"
label(final$CTXPre)="CTX exposure prior to enrollment exposure prior to enrollment"
label(final$MMFpre)="MMF exposure prior to enrollment"
label(final$ImmunosupressionV)="On immunosuppressive at V2"
label(final$SteroidV)="On steroids at V2"
label(final$CTXV)="On CTX at V2"
label(final$CNIV)="On CNI at V2"
label(final$RituxV)="On Rituxan at V2"
label(final$MMFV)="On MMF at V2"
label(final$OtherIStV)="On other immunosuppressive at V2"
label(final$RAASblockV)="On RAAS blocker at V2"
label(final$DiureticV)="On diuretic at V2"
# can't find
#label(final$Protein)
# not sure what to do about medication use
# divide into age groups
final_ped <- final[final$PAT_Ped=="1: Yes",]
final_adult <- final[final$PAT_Ped=="0: No",]
Npeds <- nrow(distinct(final_ped,SGLTID))
Nadult <- nrow(distinct(final_adult,SGLTID))
write.csv(final,file="H:\\Endocrinology\\Bjornstad\\NEPTUNE\\Data\\final_NEPTUNE_data.csv")
write.csv(final_ped,file="H:\\Endocrinology\\Bjornstad\\NEPTUNE\\Data\\final_NEPTUNE_data_peds.csv")
write.csv(final_adult,file="H:\\Endocrinology\\Bjornstad\\NEPTUNE\\Data\\final_NEPTUNE_data_adult.csv")
library(tidyr)
library(magrittr)
library(dplyr)
library(lubridate)
library(zoo)
library(M3)
library(data.table)
#library(Table1)
#library(devtools)
library(Hmisc)
library(knitr)
#library(kableExtra)
library(psycho)
#library(tidyverse)
source("C:\\Users\\pylell\\Documents\\GitHub\\General-code\\temp_table1.r")
####################################################################################################
#Data Manipulation #
####################################################################################################
setwd("H:\\Endocrinology\\Bjornstad\\NEPTUNE\\Data")
nameFile <- ".\\Copy of NEPTUNE SGLT Ancillary Data  Export 11MAY2018_working_locked.csv"
# read the data
#alldata <- read.csv(nameFile)
alldata <- read.csv(nameFile,na.strings = c("N",'',' ','               '))
table(alldata$SteroidsPre)
# are the primary outcomes constant within a patient?
#table(alldata$SGLTID,alldata$PAT_RemissionComp_Ever)
#table(alldata$SGLTID,alldata$PAT_RemissionPartComp_Ever)
#table(alldata$SGLTID,alldata$PAT_Composite)
# I thought this was going to be a survival analysis but it looks like outcomes are constant
# Groups of interest are PAT_Ped (<18 vs >=18), PAT_Cohort (disease group)
#table(alldata$PAT_Ped)
#table(alldata$PAT_Cohort)
# Exclude those with "other disease" except those with IgA nephropathy (PAT_IgA)
levels(alldata$PAT_Cohort)=c("1 - MN","2 - MCD","3 - Other", "4 - FSGS","5 - IgA")
alldata$PAT_Cohort[alldata$PAT_Cohort=="3 - Other" & alldata$PAT_IgA=="1: Yes"] <- "5 - IgA"
final <- alldata[alldata$PAT_Cohort != "3 - Other",]
final$PAT_Cohort <- factor(final$PAT_Cohort)
# do I need to add in the ERCB dataset for all analyses?
# no, this is a separate analysis
# are there patients in this dataset that should be excluded?
# exclude those with diabetic nephropathy?
final <- final[is.na(final$ExclusionCondSpecify),]
# Exclude anyone with diabetes at baseline or follow-up
final <- final[final$DM_FU != "1: Yes" & final$PAT_DMatBL != "1: Yes",]
# use only baseline visits.  mRNA data come from biopsy visit, but those data are included in the
# baseline record also
#final <- final[final$visitnum=='2: V02- Baseline',]
final <- filter(final,final$visitnum=='2: V02- Baseline')
# looking at race
# RaceBlack is yes for some multiracial, also all Black/African American
#table(final$PAT_Race)
#table(final$PAT_RaceBlack)
#table(final$PAT_Hispanic)
#table(final$PAT_Race,final$PAT_RaceBlack)
#table(final$PAT_Race,final$PAT_Hispanic,final$PAT_RaceBlack)
# recode race/ethnicity
# Whites
final$Race_eth[final$PAT_Race=='5: White/Caucasian'
& final$PAT_Hispanic=="2: Not Hispanic or Latino"] <- 'Non-Hispanic White'
# Asians
final$Race_eth[final$PAT_Race=='2: Asian/Asian American'
& final$PAT_Hispanic=="2: Not Hispanic or Latino"] <- 'Asian'
# Blacks
final$Race_eth[final$PAT_Race=='3: Black/African American'
& final$PAT_Hispanic=="2: Not Hispanic or Latino"] <- 'Non-Hispanic Black'
# Others
final$Race_eth[is.na(final$Race_eth)] <- "Other"
# need to check that race is correct
# table(final$Race_eth)
# View(final[c("Race_eth","PAT_Race","PAT_RaceBlack","PAT_Hispanic")])
# convert follow-up variables to yes/no
final$Stroke[!is.na(final$PAT_Stroke_FUTimeToFirst)] <- '1: Yes'
final$Stroke[is.na(final$PAT_Stroke_FUTimeToFirst)] <- '0: No'
final$HF[!is.na(final$PAT_HF_FUTimeToFirst)] <- '1: Yes'
final$HF[is.na(final$PAT_HF_FUTimeToFirst)] <- '0: No'
levels(final$SteroidsPre) <- c("1: Yes ","0: No")
final$SteroidsPre[is.na(final$SteroidsPre)] <- '0: No'
levels(final$ACEARBPre) <- c("1: Yes ","0: No")
final$ACEARBPre[is.na(final$ACEARBPre)] <- '0: No'
levels(final$CNIpre) <- c("1: Yes ","0: No")
final$CNIpre[is.na(final$CNIpre)] <- '0: No'
levels(final$CTXPre) <- c("1: Yes ","0: No")
final$CTXPre[is.na(final$CTXPre)] <- '0: No'
levels(final$MMFpre) <- c("1: Yes ","0: No")
final$MMFpre[is.na(final$MMFpre)] <- '0: No'
levels(final$ImmunosupressionV) <- c("1: Yes ","0: No")
final$ImmunosupressionV[is.na(final$ImmunosupressionV)] <- '0: No'
levels(final$SteroidV) <- c("1: Yes ","0: No")
final$SteroidV[is.na(final$SteroidV)] <- '0: No'
levels(final$CTXV) <- c("1: Yes ","0: No")
final$CTXV[is.na(final$CTXV)] <- '0: No'
levels(final$CNIV) <- c("1: Yes ","0: No")
final$CNIV[is.na(final$CNIV)] <- '0: No'
levels(final$RituxV) <- c("1: Yes ","0: No")
final$RituxV[is.na(final$RituxV)] <- '0: No'
levels(final$MMFV) <- c("1: Yes ","0: No")
final$MMFV[is.na(final$MMFV)] <- '0: No'
levels(final$OtherIStV) <- c("1: Yes ","0: No")
final$OtherIStV[is.na(final$OtherIStV)] <- '0: No'
levels(final$RAASblockV) <- c("1: Yes ","0: No")
final$RAASblockV[is.na(final$RAASblockV)] <- '0: No'
levels(final$DiureticV) <- c("1: Yes ","0: No")
final$DiureticV[is.na(final$DiureticV)] <- '0: No'
# convert to numeric
final$Weight <- as.numeric(as.character(final$Weight))
final$Height <- as.numeric(as.character(final$Height))
final$BP_SitSys <- as.numeric(as.character(final$BP_SitSys))
final$BP_SitDias <- as.numeric(as.character(final$BP_SitDias))
final$BP_StandSys <- as.numeric(as.character(final$BP_StandSys))
final$BP_StandDias <- as.numeric(as.character(final$BP_StandDias))
final$Hematocrit <- as.numeric(as.character(final$Hematocrit))
final$eGFR <- as.numeric(as.character(final$eGFR))
final$UPCR <- as.numeric(as.character(final$UPCR))
final$UACR <- as.numeric(as.character(final$UACR))
final$A1c <- as.numeric(as.character(final$A1c))
final$Sodium <- as.numeric(as.character(final$Sodium))
final$Potassium <- as.numeric(as.character(final$Potassium))
final$UreaNitrogen <- as.numeric(as.character(final$UreaNitrogen))
final$Glucose <- as.numeric(as.character(final$Glucose))
final$Albumin <- as.numeric(as.character(final$Albumin))
final$Calcium <- as.numeric(as.character(final$Calcium))
final$Phosphorus <- as.numeric(as.character(final$Phosphorus))
final$Magnesium <- as.numeric(as.character(final$Magnesium))
# added 1/4/19 - exclude those with missing RNA expression data
final <- final[!is.na(final$SGLT2_TI) | !is.na(final$SGLT1_GLOM) | !is.na(final$SGLT1_TI) |
!is.na(final$SGLT2_GLOM),]
#View(final[c("SGLT2_TI","SGLT1_TI","SGLT1_GLOM","SGLT2_GLOM")])
table(final$cohort)
table(final$PAT_Cohort)
library(tidyr)
library(magrittr)
library(dplyr)
library(lubridate)
library(zoo)
library(M3)
library(data.table)
library(Table1)
tr::opts_chunk$set(echo = FALSE)
library(tidyr)
library(magrittr)
library(dplyr)
library(lubridate)
library(zoo)
library(M3)
library(data.table)
#library(Table1)
library(devtools)
library(Hmisc)
library(knitr)
#library(kableExtra)
library(psycho)
#library(tidyverse)
setwd("H:\\Endocrinology\\Bjornstad\\NEPTUNE\\Data")
nameFile1 <- ".\\GlomerularTranscriptome_ERCB.csv"
nameFile2 <- ".\\TItranscriptome_ERCB.csv"
# read the data
#alldata <- read.csv(nameFile)
glom <- read.csv(nameFile1,na.strings = c("N",'',' ','               '))
ti <- read.csv(nameFile2,na.strings = c("N",'',' ','               '))
table(glom$PAT_Cohort)
table(ti$PAT_Cohort)
library(tidyr)
library(magrittr)
library(dplyr)
library(lubridate)
library(zoo)
library(M3)
library(data.table)
#library(Table1)
library(devtools)
library(Hmisc)
library(knitr)
#library(kableExtra)
library(psycho)
install.packages("psycho")
library(psycho)
#library(tidyverse)
####################################################################################################
#Data Manipulation #
####################################################################################################
setwd("H:\\Endocrinology\\Bjornstad\\NEPTUNE\\Data")
nameFile1 <- ".\\GlomerularTranscriptome_ERCB.csv"
nameFile2 <- ".\\TItranscriptome_ERCB.csv"
# read the data
#alldata <- read.csv(nameFile)
glom <- read.csv(nameFile1,na.strings = c("N",'',' ','               '))
ti <- read.csv(nameFile2,na.strings = c("N",'',' ','               '))
source("C:\\Users\\pylell\\Documents\\GitHub\\General-code\\temp_table1.r")
# keep only subgroups of interest
glom <- glom[glom$PAT_Cohort %in% c("DN","MCD","FSGS", "FSGS_MCD","IgAN","Living Donor")]
glom$PAT_Cohort
# keep only subgroups of interest
glom <- glom[glom$PAT_Cohort %in% c("DN","MCD","FSGS", "FSGS_MCD","IgAN","Living Donor"),]
table(glom$PAT_Cohort)
glom$PAT_Cohort <- factor(glom$PAT_Cohort)
table(glom$PAT_Cohort)
ti$PAT_Cohort <- factor(ti$PAT_Cohort)
table(ti$PAT_Cohort)
ti <- ti[ti$PAT_Cohort %in% c("DN","MCD","FSGS", "FSGS_MCD","IgAN","Living Donor"),]
ti$PAT_Cohort <- factor(ti$PAT_Cohort)
table(ti$PAT_Cohort)
glom$PAT_Cohort_new[glom$PAT_Cohort=="Living Donor"] <- "HC"
glom$PAT_Cohort_new[glom$PAT_Cohort=="DN"] <- "DN"
glom$PAT_Cohort_new[is.na(glom$PAT_Cohort)] <- "GN"
table(glom$PAT_Cohort,glom$PAT_Cohort_new)
View(glom$PAT_Cohort,glom$PAT_Cohort_new)
View(glom[c("PAT_Cohort","PAT_Cohort_new")])
glom$PAT_Cohort_new[glom$PAT_Cohort=="Living Donor"] <- "HC"
glom$PAT_Cohort_new[glom$PAT_Cohort=="DN"] <- "DN"
glom$PAT_Cohort_new[is.na(glom$PAT_Cohort_new)] <- "GN"
table(glom$PAT_Cohort,glom$PAT_Cohort_new)
ti$PAT_Cohort_new[ti$PAT_Cohort=="Living Donor"] <- "HC"
ti$PAT_Cohort_new[ti$PAT_Cohort=="DN"] <- "DN"
ti$PAT_Cohort_new[is.na(ti$PAT_Cohort_new)] <- "GN"
table(ti$PAT_Cohort,ti$PAT_Cohort_new)
tab_glom <- final_table(glom,c("log2.SLC5A2..SGLT2.","log2.SLC5A1..SGLT1."),
group=glom$PAT_Cohort_new,margin=2,single=0,ron=1)
tab_glom
table(glom$PAT_Cohort_new)
# transcriptome variables by dx group in peds
tab_glom <- final_table(glom,c("log2.SLC5A2..SGLT2.","log2.SLC5A1..SGLT1."),
group=as.factor(glom$PAT_Cohort_new),margin=2,single=0,ron=1)
tab_glom
###############################################################################################
setwd("H:\\Endocrinology\\Bjornstad\\NEPTUNE\\Data")
nameFile1 <- ".\\GlomerularTranscriptome_ERCB.csv"
nameFile2 <- ".\\TItranscriptome_ERCB.csv"
# read the data
#alldata <- read.csv(nameFile)
glom <- read.csv(nameFile1,na.strings = c("N",'',' ','               '))
ti <- read.csv(nameFile2,na.strings = c("N",'',' ','               '))
source("C:\\Users\\pylell\\Documents\\GitHub\\General-code\\temp_table1.r")
# keep only subgroups of interest
glom <- glom[glom$PAT_Cohort %in% c("DN","MCD","FSGS", "FSGS_MCD","IgAN","Living Donor"),]
glom$PAT_Cohort <- factor(glom$PAT_Cohort)
ti <- ti[ti$PAT_Cohort %in% c("DN","MCD","FSGS", "FSGS_MCD","IgAN","Living Donor"),]
ti$PAT_Cohort <- factor(ti$PAT_Cohort)
# create new variable for disease subtype combining categories into new GN category
glom$PAT_Cohort_new[glom$PAT_Cohort=="Living Donor"] <- "HC"
glom$PAT_Cohort_new[glom$PAT_Cohort=="DN"] <- "DN"
glom$PAT_Cohort_new[is.na(glom$PAT_Cohort_new)] <- "GN"
ti$PAT_Cohort_new[ti$PAT_Cohort=="Living Donor"] <- "HC"
ti$PAT_Cohort_new[ti$PAT_Cohort=="DN"] <- "DN"
ti$PAT_Cohort_new[is.na(ti$PAT_Cohort_new)] <- "GN"
# set factors and levels
glom$PAT_Cohort_new <- as.factor(glom$PAT_Cohort_new)
ti$PAT_Cohort_new <- as.factor(ti$PAT_Cohort_new)
# set labels
label(glom$PAT_Cohort)="Disease subtype"
library(tidyr)
library(magrittr)
library(dplyr)
library(lubridate)
library(zoo)
library(M3)
library(data.table)
#library(Table1)
library(devtools)
library(Hmisc)
library(knitr)
#library(kableExtra)
library(psycho)
#library(tidyverse)
# set labels
label(glom$PAT_Cohort)="Disease subtype"
label(glom$PAT_Cohort_new)="Disease subtype"
label(glom$log2.SLC5A2..SGLT2.)="Log2 SLC5A2 SGLT2 GLOM"
label(glom$log2.SLC5A1..SGLT1.)="Log2 SLCA1 SGLT1 GLOM"
label(ti$PAT_Cohort)="Disease subtype"
label(ti$PAT_Cohort_new)="Disease subtype"
label(ti$log2.SLC5A2..SGLT2.)="Log2 SLC5A2 SGLT2 TI"
label(ti$log2.SLC5A1..SGLT1.)="Log2 SLC5A1 SGLT1 TI"
Nglom <- nrow(distinct(glom,Sample.name))
Nti <- nrow(distinct(ti,sample.id))
# pairwise comparisons
anova_glom <- aov(log2.SLC5A2..SGLT2. ~ PAT_Cohort_new, data=glom)
anova_glom
names(anova_glom)
anova_glom$fitted.values
names(anova_glom)
pair_glom <- pairwise.t.test(log2.SLC5A2..SGLT2. ~ PAT_Cohort_new, data=glom)
pair_glom <- pairwise.t.test(log2.SLC5A2..SGLT2. ~ as.factor(PAT_Cohort_new), data=glom)
help(pairwise.t.test)
pair_glom <- pairwise.t.test(log2.SLC5A2..SGLT2., PAT_Cohort_new, data=glom, p.adjust.method = "bonferroni")
pair_glom <- pairwise.t.test(glom$log2.SLC5A2..SGLT2., glom$PAT_Cohort_new, p.adjust.method = "bonferroni")
pair_glom
table(glom$PAT_Cohort_new)
summary(anova_glom)
anova_glom_t1 <- aov(log2.SLC5A2..SGLT1. ~ PAT_Cohort_new, data=glom)
anova_glom_t1 <- aov(log2.SLC5A1..SGLT1. ~ PAT_Cohort_new, data=glom)
pair_glom_t1 <- pairwise.t.test(glom$log2.SLC5A1..SGLT1., glom$PAT_Cohort_new, p.adjust.method = "bonferroni")
summary(anova_glom_t1)
pair_glom_t1
# pairwise comparisons
anova_ti_t2 <- aov(log2.SLC5A2..SGLT2. ~ PAT_Cohort_new, data=ti)
pair_ti_t2 <- pairwise.t.test(ti$log2.SLC5A2..SGLT2., ti$PAT_Cohort_new, p.adjust.method = "bonferroni")
summary(anova_ti_t2)
pair_ti_t2
anova_glom_t1 <- aov(log2.SLC5A1..SGLT1. ~ PAT_Cohort_new, data=ti)
pair_glom_t1 <- pairwise.t.test(ti$log2.SLC5A1..SGLT1., ti$PAT_Cohort_new, p.adjust.method = "bonferroni")
summary(anova_glom_t1)
pair_glom_t1
pair_glom_t2
pair_glom_t2 <- pairwise.t.test(glom$log2.SLC5A2..SGLT2., glom$PAT_Cohort_new, p.adjust.method = "bonferroni")
pair_glom_t2
names(pair_glom_t2)
pair_glom_t2$p.value
pair_ti_t2 <- pairwise.t.test(ti$log2.SLC5A2..SGLT2., ti$PAT_Cohort_new, p.adjust.method = "bonferroni")
